'use strict';

var getCallConfigSummary = require('./helpers/get-call-config-summary.js');
var sanitization = require('../util/sanitization.js');
var algosdk = require('algosdk');

const createGeneratorContext = (app, options) => {
    const sanitizer = sanitization.getSanitizer(options);
    return {
        sanitizer,
        app,
        name: sanitizer.makeSafeTypeIdentifier(app.name),
        callConfig: getCallConfigSummary.getCallConfigSummary(app),
        methodSignatureToUniqueName: app.methods.reduce((acc, cur) => {
            const signature = new algosdk.ABIMethod(cur).getSignature();
            acc[signature] = app.methods.some((m) => m.name === cur.name && m !== cur) ? signature : cur.name;
            return acc;
        }, {}),
    };
};

exports.createGeneratorContext = createGeneratorContext;
//# sourceMappingURL=generator-context.js.map
