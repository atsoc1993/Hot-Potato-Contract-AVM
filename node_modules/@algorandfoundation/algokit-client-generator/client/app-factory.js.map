{"version":3,"file":"app-factory.js","sources":["../../src/client/app-factory.ts"],"sourcesContent":["import { DecIndent, DecIndentAndCloseBlock, DocumentParts, IncIndent, indent, jsDoc, NewLine } from '../output/writer'\nimport { BARE_CALL, MethodList } from './helpers/get-call-config-summary'\nimport { GeneratorContext } from './generator-context'\nimport { getCreateOnCompleteOptions } from './deploy-types'\nimport { ABIMethod } from 'algosdk'\nimport { Method } from '@algorandfoundation/algokit-utils/types/app-arc56'\n\nexport function* appFactory(ctx: GeneratorContext): DocumentParts {\n  const { app, name } = ctx\n\n  yield* jsDoc(\n    `A factory to create and deploy one or more instance of the ${app.name} smart contract and to create one or more app clients to interact with those (or other) app instances`,\n  )\n  yield `export class ${name}Factory {`\n  yield IncIndent\n  yield* jsDoc(`The underlying \\`AppFactory\\` for when you want to have more flexibility`)\n  yield 'public readonly appFactory: _AppFactory'\n  yield NewLine\n\n  yield* jsDoc({\n    description: `Creates a new instance of \\`${name}Factory\\``,\n    params: {\n      params: 'The parameters to initialise the app factory with',\n    },\n  })\n\n  yield `\n    constructor(params: Omit<AppFactoryParams, 'appSpec'>) {\n      this.appFactory = new _AppFactory({\n        ...params,\n        appSpec: APP_SPEC,\n      })\n    }\n\n    /** The name of the app (from the ARC-32 / ARC-56 app spec or override). */\n    public get appName() {\n      return this.appFactory.appName\n    }\n\n    /** The ARC-56 app spec being used */\n    get appSpec() {\n      return APP_SPEC\n    }\n\n    /** A reference to the underlying \\`AlgorandClient\\` this app factory is using. */\n    public get algorand(): AlgorandClient {\n      return this.appFactory.algorand\n    }\n\n    /**\n     * Returns a new \\`AppClient\\` client for an app instance of the given ID.\n     *\n     * Automatically populates appName, defaultSender and source maps from the factory\n     * if not specified in the params.\n     * @param params The parameters to create the app client\n     * @returns The \\`AppClient\\`\n     */\n    public getAppClientById(params: AppFactoryAppClientParams) {\n      return new ${name}Client(this.appFactory.getAppClientById(params))\n    }\n\n    /**\n     * Returns a new \\`AppClient\\` client, resolving the app by creator address and name\n     * using AlgoKit app deployment semantics (i.e. looking for the app creation transaction note).\n     *\n     * Automatically populates appName, defaultSender and source maps from the factory\n     * if not specified in the params.\n     * @param params The parameters to create the app client\n     * @returns The \\`AppClient\\`\n     */\n    public async getAppClientByCreatorAndName(\n      params: AppFactoryResolveAppClientByCreatorAndNameParams,\n    ) {\n      return new ${name}Client(await this.appFactory.getAppClientByCreatorAndName(params))\n    }\n  `\n\n  yield* deployMethod(ctx)\n  yield* params(ctx)\n  yield* createTransaction(ctx)\n  yield* send(ctx)\n  yield DecIndentAndCloseBlock\n}\n\nfunction* params(ctx: GeneratorContext): DocumentParts {\n  yield* jsDoc(\n    `Get parameters to create transactions (create and deploy related calls) for the current app. A good mental model for this is that these parameters represent a deferred transaction creation.`,\n  )\n  yield `readonly params = {`\n  yield IncIndent\n  yield* paramMethods(ctx)\n  yield DecIndentAndCloseBlock\n  yield NewLine\n}\n\nfunction* createTransaction(ctx: GeneratorContext): DocumentParts {\n  yield* jsDoc(`Create transactions for the current app`)\n  yield `readonly createTransaction = {`\n  yield IncIndent\n  yield* createTransactionMethods(ctx)\n  yield DecIndentAndCloseBlock\n  yield NewLine\n}\n\nfunction* send(ctx: GeneratorContext): DocumentParts {\n  yield* jsDoc(`Send calls to the current app`)\n  yield `readonly send = {`\n  yield IncIndent\n  yield* createMethods(ctx)\n  yield DecIndentAndCloseBlock\n  yield NewLine\n}\n\nfunction* createMethods(generator: GeneratorContext): DocumentParts {\n  const { app } = generator\n  if (generator.callConfig.createMethods.length) {\n    yield* jsDoc(`Gets available create methods`)\n    yield `create: {`\n    yield IncIndent\n    for (const methodSig of generator.callConfig.createMethods) {\n      if (methodSig === BARE_CALL) {\n        yield* bareMethodCallParams({\n          generator,\n          name: 'bare',\n          description: `Creates a new instance of the ${app.name} smart contract using a bare call`,\n          verb: 'create',\n          type: 'send',\n          includeCompilation: true,\n        })\n      } else {\n        const method = generator.app.methods.find((m) => new ABIMethod(m).getSignature() === methodSig)!\n        yield* abiMethodCallParams({\n          generator,\n          method,\n          description: `Creates a new instance of the ${app.name} smart contract using an ABI method call`,\n          verb: 'create',\n          type: 'send',\n          includeCompilation: true,\n        })\n      }\n    }\n    yield DecIndent\n    yield '},'\n    yield NewLine\n  }\n}\n\nfunction* paramMethods(ctx: GeneratorContext): DocumentParts {\n  const { app, callConfig } = ctx\n\n  yield* operationMethods(\n    ctx,\n    `Creates a new instance of the ${app.name} smart contract`,\n    callConfig.createMethods,\n    'create',\n    'params',\n    true,\n  )\n\n  yield* operationMethods(\n    ctx,\n    `Updates an existing instance of the ${app.name} smart contract`,\n    callConfig.updateMethods,\n    'deployUpdate',\n    'params',\n    true,\n  )\n  yield* operationMethods(\n    ctx,\n    `Deletes an existing instance of the ${app.name} smart contract`,\n    callConfig.deleteMethods,\n    'deployDelete',\n    'params',\n  )\n}\n\nfunction* createTransactionMethods(ctx: GeneratorContext): DocumentParts {\n  const { app, callConfig } = ctx\n\n  yield* operationMethods(\n    ctx,\n    `Creates a new instance of the ${app.name} smart contract`,\n    callConfig.createMethods,\n    'create',\n    'createTransaction',\n    true,\n  )\n}\n\nfunction* bareMethodCallParams({\n  generator: { app, name: clientName },\n  name,\n  description,\n  verb,\n  type,\n  includeCompilation,\n}: {\n  generator: GeneratorContext\n  name: string\n  description: string\n  verb: 'create' | 'deployUpdate' | 'deployDelete'\n  type: 'params' | 'createTransaction' | 'send'\n  includeCompilation?: boolean\n}): DocumentParts {\n  const onComplete = verb === 'create' ? getCreateOnCompleteOptions(BARE_CALL, app) : undefined\n  yield* jsDoc({\n    description: `${description}.`,\n    params: {\n      params: `The params for the bare (raw) call`,\n    },\n    returns:\n      type === 'params' || type === 'createTransaction'\n        ? `The ${type === 'createTransaction' ? 'transaction' : type} for a ${verb} call`\n        : `The ${verb} result`,\n  })\n  yield `${name}: ${type === 'send' ? 'async ' : ''}(params?: Expand<AppClientBareCallParams${\n    includeCompilation ? ' &' + ' AppClientCompilationParams' : ''\n  }${\n    verb === 'create' ? ' & CreateSchema' : ''\n  }${type === 'send' ? ' & SendParams' : ''}${onComplete?.type ? ` & ${onComplete.type}` : ''}>) => {`\n  if (type === 'params' || type === 'createTransaction') {\n    yield* indent(`return this.appFactory.${type}.bare.${verb}(params)`)\n  } else {\n    yield* indent(\n      `const result = await this.appFactory.send.bare.create(params)`,\n      `return { result: result.result, appClient: new ${clientName}Client(result.appClient) }`,\n    )\n  }\n  yield '},'\n}\n\nfunction* abiMethodCallParams({\n  generator: { app, methodSignatureToUniqueName, name, sanitizer },\n  method,\n  description,\n  verb,\n  type,\n  includeCompilation,\n}: {\n  generator: GeneratorContext\n  method: Method\n  description: string\n  verb: 'create' | 'deployUpdate' | 'deployDelete'\n  type: 'params' | 'createTransaction' | 'send'\n  includeCompilation?: boolean\n}) {\n  const methodSig = new ABIMethod(method).getSignature()\n  const uniqueName = methodSignatureToUniqueName[methodSig]\n  const onComplete = verb === 'create' ? getCreateOnCompleteOptions(methodSig, app) : undefined\n  yield* jsDoc({\n    description: `${description} using the ${methodSig} ABI method.`,\n    abiDescription: method?.desc,\n    params: {\n      params: `The params for the smart contract call`,\n    },\n    returns: `The ${verb} ${type === 'params' ? 'params' : type === 'createTransaction' ? 'transaction' : 'result'}${method?.returns?.desc ? `: ${method.returns.desc}` : ''}`,\n  })\n  const methodName = sanitizer.makeSafeMethodIdentifier(uniqueName)\n  const methodNameAccessor = sanitizer.getSafeMemberAccessor(methodName)\n  const methodSigSafe = sanitizer.makeSafeStringTypeLiteral(methodSig)\n  yield `${methodName}: ${type === 'send' ? 'async ' : ''}(params: CallParams<${name}Args['obj']['${methodSigSafe}'] | ${name}Args['tuple']['${methodSigSafe}']>${\n    includeCompilation ? ' &' + ' AppClientCompilationParams' : ''\n  }${\n    verb === 'create' ? ' & CreateSchema' : ''\n  }${type === 'send' ? ' & SendParams' : ''}${onComplete?.type ? ` & ${onComplete.type}` : ''}${onComplete?.isOptional !== false && (method.args.length === 0 || !method.args.some((a) => !a.defaultValue)) ? ` = {args: [${method.args.map((_) => 'undefined').join(', ')}]}` : ''}) => {`\n  if (type === 'params' || type === 'createTransaction') {\n    yield* indent(\n      `return this.appFactory.${type}.${verb}(${name}ParamsFactory.${verb == 'deployDelete' ? 'delete' : verb === 'deployUpdate' ? 'update' : verb}${methodNameAccessor}(params))`,\n    )\n  } else {\n    yield* indent(\n      `const result = await this.appFactory.send.create(${name}ParamsFactory.${verb}${methodNameAccessor}(params))`,\n      `return { result: { ...result.result, return: result.result.return as unknown as (undefined | ${name}Returns['${methodSigSafe}']) }, appClient: new ${name}Client(result.appClient) }`,\n    )\n  }\n  yield '},'\n}\n\nfunction* operationMethods(\n  generator: GeneratorContext,\n  description: string,\n  methods: MethodList,\n  verb: 'create' | 'deployUpdate' | 'deployDelete',\n  type: 'params' | 'createTransaction',\n  includeCompilation?: boolean,\n): DocumentParts {\n  if (methods.length) {\n    yield* jsDoc(`Gets available ${verb} methods`)\n    yield `${verb}: {`\n    yield IncIndent\n    for (const methodSig of methods) {\n      if (methodSig === BARE_CALL) {\n        yield* bareMethodCallParams({\n          generator,\n          name: 'bare',\n          description: `${description} using a bare call`,\n          verb,\n          type,\n          includeCompilation,\n        })\n      } else {\n        const method = generator.app.methods.find((m) => new ABIMethod(m).getSignature() === methodSig)!\n        yield* abiMethodCallParams({\n          generator,\n          method,\n          description,\n          verb,\n          type,\n          includeCompilation,\n        })\n      }\n    }\n    yield DecIndent\n    yield '},'\n    yield NewLine\n  }\n}\n\nfunction* deployMethod(ctx: GeneratorContext): DocumentParts {\n  const { app, callConfig, name } = ctx\n  yield* jsDoc({\n    description: `Idempotently deploys the ${app.name} smart contract.`,\n    params: {\n      params: 'The arguments for the contract calls and any additional parameters for the call',\n    },\n    returns: 'The deployment result',\n  })\n  yield `public async deploy(params: ${name}DeployParams = {}) {`\n  yield IncIndent\n\n  yield `const result = await this.appFactory.deploy({`\n  yield IncIndent\n  yield `...params,`\n  if (callConfig.createMethods.filter((m) => m !== BARE_CALL).length) {\n    yield `createParams: params.createParams?.method ? ${name}ParamsFactory.create._resolveByMethod(params.createParams) : params.createParams ? params.createParams as (${name}CreateCallParams & { args: Uint8Array[] }) : undefined,`\n  }\n  if (callConfig.updateMethods.filter((m) => m !== BARE_CALL).length) {\n    yield `updateParams: params.updateParams?.method ? ${name}ParamsFactory.update._resolveByMethod(params.updateParams) : params.updateParams ? params.updateParams as (${name}UpdateCallParams & { args: Uint8Array[] }) : undefined,`\n  }\n  if (callConfig.deleteMethods.filter((m) => m !== BARE_CALL).length) {\n    yield `deleteParams: params.deleteParams?.method ? ${name}ParamsFactory.delete._resolveByMethod(params.deleteParams) : params.deleteParams ? params.deleteParams as (${name}DeleteCallParams & { args: Uint8Array[] }) : undefined,`\n  }\n  yield DecIndent\n  yield `})`\n  yield `return { result: result.result, appClient: new ${name}Client(result.appClient) }`\n  yield DecIndentAndCloseBlock\n  yield NewLine\n}\n"],"names":["jsDoc","IncIndent","NewLine","DecIndentAndCloseBlock","BARE_CALL","ABIMethod","DecIndent","getCreateOnCompleteOptions","indent"],"mappings":";;;;;;;AAOe,UAAE,UAAU,CAAC,GAAqB,EAAA;AAC/C,IAAA,MAAM,EAAE,GAAG,EAAE,IAAI,EAAE,GAAG,GAAG,CAAA;IAEzB,OAAOA,YAAK,CACV,CAAA,2DAAA,EAA8D,GAAG,CAAC,IAAI,CAAuG,qGAAA,CAAA,CAC9K,CAAA;IACD,MAAM,CAAA,aAAA,EAAgB,IAAI,CAAA,SAAA,CAAW,CAAA;AACrC,IAAA,MAAMC,gBAAS,CAAA;AACf,IAAA,OAAOD,YAAK,CAAC,CAAA,wEAAA,CAA0E,CAAC,CAAA;AACxF,IAAA,MAAM,yCAAyC,CAAA;AAC/C,IAAA,MAAME,cAAO,CAAA;IAEb,OAAOF,YAAK,CAAC;QACX,WAAW,EAAE,CAA+B,4BAAA,EAAA,IAAI,CAAW,SAAA,CAAA;AAC3D,QAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,mDAAmD;AAC5D,SAAA;AACF,KAAA,CAAC,CAAA;IAEF,MAAM,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;mBAgCW,IAAI,CAAA;;;;;;;;;;;;;;;mBAeJ,IAAI,CAAA;;GAEpB,CAAA;AAED,IAAA,OAAO,YAAY,CAAC,GAAG,CAAC,CAAA;AACxB,IAAA,OAAO,MAAM,CAAC,GAAG,CAAC,CAAA;AAClB,IAAA,OAAO,iBAAiB,CAAC,GAAG,CAAC,CAAA;AAC7B,IAAA,OAAO,IAAI,CAAC,GAAG,CAAC,CAAA;AAChB,IAAA,MAAMG,6BAAsB,CAAA;AAC9B,CAAC;AAED,UAAU,MAAM,CAAC,GAAqB,EAAA;AACpC,IAAA,OAAOH,YAAK,CACV,CAAA,6LAAA,CAA+L,CAChM,CAAA;AACD,IAAA,MAAM,qBAAqB,CAAA;AAC3B,IAAA,MAAMC,gBAAS,CAAA;AACf,IAAA,OAAO,YAAY,CAAC,GAAG,CAAC,CAAA;AACxB,IAAA,MAAME,6BAAsB,CAAA;AAC5B,IAAA,MAAMD,cAAO,CAAA;AACf,CAAC;AAED,UAAU,iBAAiB,CAAC,GAAqB,EAAA;AAC/C,IAAA,OAAOF,YAAK,CAAC,CAAA,uCAAA,CAAyC,CAAC,CAAA;AACvD,IAAA,MAAM,gCAAgC,CAAA;AACtC,IAAA,MAAMC,gBAAS,CAAA;AACf,IAAA,OAAO,wBAAwB,CAAC,GAAG,CAAC,CAAA;AACpC,IAAA,MAAME,6BAAsB,CAAA;AAC5B,IAAA,MAAMD,cAAO,CAAA;AACf,CAAC;AAED,UAAU,IAAI,CAAC,GAAqB,EAAA;AAClC,IAAA,OAAOF,YAAK,CAAC,CAAA,6BAAA,CAA+B,CAAC,CAAA;AAC7C,IAAA,MAAM,mBAAmB,CAAA;AACzB,IAAA,MAAMC,gBAAS,CAAA;AACf,IAAA,OAAO,aAAa,CAAC,GAAG,CAAC,CAAA;AACzB,IAAA,MAAME,6BAAsB,CAAA;AAC5B,IAAA,MAAMD,cAAO,CAAA;AACf,CAAC;AAED,UAAU,aAAa,CAAC,SAA2B,EAAA;AACjD,IAAA,MAAM,EAAE,GAAG,EAAE,GAAG,SAAS,CAAA;IACzB,IAAI,SAAS,CAAC,UAAU,CAAC,aAAa,CAAC,MAAM,EAAE;AAC7C,QAAA,OAAOF,YAAK,CAAC,CAAA,6BAAA,CAA+B,CAAC,CAAA;AAC7C,QAAA,MAAM,WAAW,CAAA;AACjB,QAAA,MAAMC,gBAAS,CAAA;QACf,KAAK,MAAM,SAAS,IAAI,SAAS,CAAC,UAAU,CAAC,aAAa,EAAE;AAC1D,YAAA,IAAI,SAAS,KAAKG,8BAAS,EAAE;gBAC3B,OAAO,oBAAoB,CAAC;oBAC1B,SAAS;AACT,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,WAAW,EAAE,CAAA,8BAAA,EAAiC,GAAG,CAAC,IAAI,CAAmC,iCAAA,CAAA;AACzF,oBAAA,IAAI,EAAE,QAAQ;AACd,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,kBAAkB,EAAE,IAAI;AACzB,iBAAA,CAAC,CAAA;aACH;iBAAM;gBACL,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAIC,iBAAS,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,SAAS,CAAE,CAAA;gBAChG,OAAO,mBAAmB,CAAC;oBACzB,SAAS;oBACT,MAAM;AACN,oBAAA,WAAW,EAAE,CAAA,8BAAA,EAAiC,GAAG,CAAC,IAAI,CAA0C,wCAAA,CAAA;AAChG,oBAAA,IAAI,EAAE,QAAQ;AACd,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,kBAAkB,EAAE,IAAI;AACzB,iBAAA,CAAC,CAAA;aACH;SACF;AACD,QAAA,MAAMC,gBAAS,CAAA;AACf,QAAA,MAAM,IAAI,CAAA;AACV,QAAA,MAAMJ,cAAO,CAAA;KACd;AACH,CAAC;AAED,UAAU,YAAY,CAAC,GAAqB,EAAA;AAC1C,IAAA,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,GAAG,CAAA;IAE/B,OAAO,gBAAgB,CACrB,GAAG,EACH,CAAA,8BAAA,EAAiC,GAAG,CAAC,IAAI,CAAA,eAAA,CAAiB,EAC1D,UAAU,CAAC,aAAa,EACxB,QAAQ,EACR,QAAQ,EACR,IAAI,CACL,CAAA;IAED,OAAO,gBAAgB,CACrB,GAAG,EACH,CAAA,oCAAA,EAAuC,GAAG,CAAC,IAAI,CAAA,eAAA,CAAiB,EAChE,UAAU,CAAC,aAAa,EACxB,cAAc,EACd,QAAQ,EACR,IAAI,CACL,CAAA;IACD,OAAO,gBAAgB,CACrB,GAAG,EACH,CAAA,oCAAA,EAAuC,GAAG,CAAC,IAAI,iBAAiB,EAChE,UAAU,CAAC,aAAa,EACxB,cAAc,EACd,QAAQ,CACT,CAAA;AACH,CAAC;AAED,UAAU,wBAAwB,CAAC,GAAqB,EAAA;AACtD,IAAA,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,GAAG,GAAG,CAAA;IAE/B,OAAO,gBAAgB,CACrB,GAAG,EACH,CAAA,8BAAA,EAAiC,GAAG,CAAC,IAAI,CAAA,eAAA,CAAiB,EAC1D,UAAU,CAAC,aAAa,EACxB,QAAQ,EACR,mBAAmB,EACnB,IAAI,CACL,CAAA;AACH,CAAC;AAED,UAAU,oBAAoB,CAAC,EAC7B,SAAS,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,UAAU,EAAE,EACpC,IAAI,EACJ,WAAW,EACX,IAAI,EACJ,IAAI,EACJ,kBAAkB,GAQnB,EAAA;AACC,IAAA,MAAM,UAAU,GAAG,IAAI,KAAK,QAAQ,GAAGK,sCAA0B,CAACH,8BAAS,EAAE,GAAG,CAAC,GAAG,SAAS,CAAA;IAC7F,OAAOJ,YAAK,CAAC;QACX,WAAW,EAAE,CAAG,EAAA,WAAW,CAAG,CAAA,CAAA;AAC9B,QAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,CAAoC,kCAAA,CAAA;AAC7C,SAAA;AACD,QAAA,OAAO,EACL,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,mBAAmB;AAC/C,cAAE,CAAA,IAAA,EAAO,IAAI,KAAK,mBAAmB,GAAG,aAAa,GAAG,IAAI,CAAA,OAAA,EAAU,IAAI,CAAO,KAAA,CAAA;cAC/E,CAAO,IAAA,EAAA,IAAI,CAAS,OAAA,CAAA;AAC3B,KAAA,CAAC,CAAA;AACF,IAAA,MAAM,CAAG,EAAA,IAAI,CAAK,EAAA,EAAA,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAA,wCAAA,EAC/C,kBAAkB,GAAG,IAAI,GAAG,6BAA6B,GAAG,EAC9D,CACE,EAAA,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,EAC1C,CAAA,EAAG,IAAI,KAAK,MAAM,GAAG,eAAe,GAAG,EAAE,CAAA,EAAG,UAAU,EAAE,IAAI,GAAG,MAAM,UAAU,CAAC,IAAI,CAAA,CAAE,GAAG,EAAE,SAAS,CAAA;IACpG,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,mBAAmB,EAAE;QACrD,OAAOQ,aAAM,CAAC,CAAA,uBAAA,EAA0B,IAAI,CAAS,MAAA,EAAA,IAAI,CAAU,QAAA,CAAA,CAAC,CAAA;KACrE;SAAM;QACL,OAAOA,aAAM,CACX,CAAA,6DAAA,CAA+D,EAC/D,CAAkD,+CAAA,EAAA,UAAU,CAA4B,0BAAA,CAAA,CACzF,CAAA;KACF;AACD,IAAA,MAAM,IAAI,CAAA;AACZ,CAAC;AAED,UAAU,mBAAmB,CAAC,EAC5B,SAAS,EAAE,EAAE,GAAG,EAAE,2BAA2B,EAAE,IAAI,EAAE,SAAS,EAAE,EAChE,MAAM,EACN,WAAW,EACX,IAAI,EACJ,IAAI,EACJ,kBAAkB,GAQnB,EAAA;IACC,MAAM,SAAS,GAAG,IAAIH,iBAAS,CAAC,MAAM,CAAC,CAAC,YAAY,EAAE,CAAA;AACtD,IAAA,MAAM,UAAU,GAAG,2BAA2B,CAAC,SAAS,CAAC,CAAA;AACzD,IAAA,MAAM,UAAU,GAAG,IAAI,KAAK,QAAQ,GAAGE,sCAA0B,CAAC,SAAS,EAAE,GAAG,CAAC,GAAG,SAAS,CAAA;IAC7F,OAAOP,YAAK,CAAC;AACX,QAAA,WAAW,EAAE,CAAA,EAAG,WAAW,CAAA,WAAA,EAAc,SAAS,CAAc,YAAA,CAAA;QAChE,cAAc,EAAE,MAAM,EAAE,IAAI;AAC5B,QAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,CAAwC,sCAAA,CAAA;AACjD,SAAA;QACD,OAAO,EAAE,OAAO,IAAI,CAAA,CAAA,EAAI,IAAI,KAAK,QAAQ,GAAG,QAAQ,GAAG,IAAI,KAAK,mBAAmB,GAAG,aAAa,GAAG,QAAQ,GAAG,MAAM,EAAE,OAAO,EAAE,IAAI,GAAG,KAAK,MAAM,CAAC,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,CAAE,CAAA;AAC3K,KAAA,CAAC,CAAA;IACF,MAAM,UAAU,GAAG,SAAS,CAAC,wBAAwB,CAAC,UAAU,CAAC,CAAA;IACjE,MAAM,kBAAkB,GAAG,SAAS,CAAC,qBAAqB,CAAC,UAAU,CAAC,CAAA;IACtE,MAAM,aAAa,GAAG,SAAS,CAAC,yBAAyB,CAAC,SAAS,CAAC,CAAA;AACpE,IAAA,MAAM,CAAG,EAAA,UAAU,CAAK,EAAA,EAAA,IAAI,KAAK,MAAM,GAAG,QAAQ,GAAG,EAAE,CAAA,oBAAA,EAAuB,IAAI,CAAA,aAAA,EAAgB,aAAa,CAAA,KAAA,EAAQ,IAAI,CAAA,eAAA,EAAkB,aAAa,CACxJ,GAAA,EAAA,kBAAkB,GAAG,IAAI,GAAG,6BAA6B,GAAG,EAC9D,CAAA,EACE,IAAI,KAAK,QAAQ,GAAG,iBAAiB,GAAG,EAC1C,CAAA,EAAG,IAAI,KAAK,MAAM,GAAG,eAAe,GAAG,EAAE,CAAA,EAAG,UAAU,EAAE,IAAI,GAAG,MAAM,UAAU,CAAC,IAAI,CAAA,CAAE,GAAG,EAAE,CAAG,EAAA,UAAU,EAAE,UAAU,KAAK,KAAK,KAAK,MAAM,CAAC,IAAI,CAAC,MAAM,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,YAAY,CAAC,CAAC,GAAG,CAAc,WAAA,EAAA,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,WAAW,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,EAAA,CAAI,GAAG,EAAE,QAAQ,CAAA;IACzR,IAAI,IAAI,KAAK,QAAQ,IAAI,IAAI,KAAK,mBAAmB,EAAE;AACrD,QAAA,OAAOQ,aAAM,CACX,CAAA,uBAAA,EAA0B,IAAI,CAAI,CAAA,EAAA,IAAI,CAAI,CAAA,EAAA,IAAI,iBAAiB,IAAI,IAAI,cAAc,GAAG,QAAQ,GAAG,IAAI,KAAK,cAAc,GAAG,QAAQ,GAAG,IAAI,CAAA,EAAG,kBAAkB,CAAA,SAAA,CAAW,CAC7K,CAAA;KACF;SAAM;QACL,OAAOA,aAAM,CACX,oDAAoD,IAAI,CAAA,cAAA,EAAiB,IAAI,CAAG,EAAA,kBAAkB,WAAW,EAC7G,CAAA,6FAAA,EAAgG,IAAI,CAAY,SAAA,EAAA,aAAa,yBAAyB,IAAI,CAAA,0BAAA,CAA4B,CACvL,CAAA;KACF;AACD,IAAA,MAAM,IAAI,CAAA;AACZ,CAAC;AAED,UAAU,gBAAgB,CACxB,SAA2B,EAC3B,WAAmB,EACnB,OAAmB,EACnB,IAAgD,EAChD,IAAoC,EACpC,kBAA4B,EAAA;AAE5B,IAAA,IAAI,OAAO,CAAC,MAAM,EAAE;QAClB,OAAOR,YAAK,CAAC,kBAAkB,IAAI,CAAA,QAAA,CAAU,CAAC,CAAA;QAC9C,MAAM,CAAA,EAAG,IAAI,CAAA,GAAA,CAAK,CAAA;AAClB,QAAA,MAAMC,gBAAS,CAAA;AACf,QAAA,KAAK,MAAM,SAAS,IAAI,OAAO,EAAE;AAC/B,YAAA,IAAI,SAAS,KAAKG,8BAAS,EAAE;gBAC3B,OAAO,oBAAoB,CAAC;oBAC1B,SAAS;AACT,oBAAA,IAAI,EAAE,MAAM;oBACZ,WAAW,EAAE,CAAG,EAAA,WAAW,CAAoB,kBAAA,CAAA;oBAC/C,IAAI;oBACJ,IAAI;oBACJ,kBAAkB;AACnB,iBAAA,CAAC,CAAA;aACH;iBAAM;gBACL,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,IAAIC,iBAAS,CAAC,CAAC,CAAC,CAAC,YAAY,EAAE,KAAK,SAAS,CAAE,CAAA;gBAChG,OAAO,mBAAmB,CAAC;oBACzB,SAAS;oBACT,MAAM;oBACN,WAAW;oBACX,IAAI;oBACJ,IAAI;oBACJ,kBAAkB;AACnB,iBAAA,CAAC,CAAA;aACH;SACF;AACD,QAAA,MAAMC,gBAAS,CAAA;AACf,QAAA,MAAM,IAAI,CAAA;AACV,QAAA,MAAMJ,cAAO,CAAA;KACd;AACH,CAAC;AAED,UAAU,YAAY,CAAC,GAAqB,EAAA;IAC1C,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,GAAG,GAAG,CAAA;IACrC,OAAOF,YAAK,CAAC;AACX,QAAA,WAAW,EAAE,CAAA,yBAAA,EAA4B,GAAG,CAAC,IAAI,CAAkB,gBAAA,CAAA;AACnE,QAAA,MAAM,EAAE;AACN,YAAA,MAAM,EAAE,iFAAiF;AAC1F,SAAA;AACD,QAAA,OAAO,EAAE,uBAAuB;AACjC,KAAA,CAAC,CAAA;IACF,MAAM,CAAA,4BAAA,EAA+B,IAAI,CAAA,oBAAA,CAAsB,CAAA;AAC/D,IAAA,MAAMC,gBAAS,CAAA;AAEf,IAAA,MAAM,+CAA+C,CAAA;AACrD,IAAA,MAAMA,gBAAS,CAAA;AACf,IAAA,MAAM,YAAY,CAAA;AAClB,IAAA,IAAI,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAKG,8BAAS,CAAC,CAAC,MAAM,EAAE;AAClE,QAAA,MAAM,CAA+C,4CAAA,EAAA,IAAI,CAA8G,2GAAA,EAAA,IAAI,yDAAyD,CAAA;KACrO;AACD,IAAA,IAAI,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAKA,8BAAS,CAAC,CAAC,MAAM,EAAE;AAClE,QAAA,MAAM,CAA+C,4CAAA,EAAA,IAAI,CAA8G,2GAAA,EAAA,IAAI,yDAAyD,CAAA;KACrO;AACD,IAAA,IAAI,UAAU,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAKA,8BAAS,CAAC,CAAC,MAAM,EAAE;AAClE,QAAA,MAAM,CAA+C,4CAAA,EAAA,IAAI,CAA8G,2GAAA,EAAA,IAAI,yDAAyD,CAAA;KACrO;AACD,IAAA,MAAME,gBAAS,CAAA;AACf,IAAA,MAAM,IAAI,CAAA;IACV,MAAM,CAAA,+CAAA,EAAkD,IAAI,CAAA,0BAAA,CAA4B,CAAA;AACxF,IAAA,MAAMH,6BAAsB,CAAA;AAC5B,IAAA,MAAMD,cAAO,CAAA;AACf;;;;"}